Banquelette 


== 1. Description 
Banquelette est un outil pour gérer ces comptes.


== 2. Installation 
Paquets à installer : python2.7, couchdb, django1.8, couchdbkit
sous debian/ubuntu :
	apt-get install couchdb python-django 
        pip install couchdbkit

Assurez-vous d'avoir la version 1.8 grâce à cette commande :
	django-admin --version
Si la version de django est inférieur à 1.8, upgradez via cette commande :
	pip install django --upgrade

Couchdbkit est une bibliotheque qui n'est plus maintenue et qui utilise une bibliotheque obsolete de django.
Pour corriger ça, edister le fichier suivant :
	vim /usr/local/lib/python2.7/dist-packages/couchdbkit/ext/django/schema.py
Puis commenter la 24e ligne : 
	#from django.db.models.options import get_verbose_name


== 3. Configuration
=== a. configuration couchdb
Créé une database nommée : account

Afin que l'application fontionne un certain nombre de views doivent être créées dans cette database.
3 documents doivent être créés : 
{
   "_id": "_design/all",
   "_rev": "2-f507e32fcdafe44a17fe0be78f90fdc3",
   "language": "javascript",
   "views": {
       "by_date": {
           "map": "function(doc) {\n  emit(doc.date, doc);\n}"
       },
       "check_false": {
           "map": "function(doc) {\n  if ( doc.check == false ){\n    emit(doc.date, doc);\n  }\n}"
       }
   }
}

{
   "_id": "_design/average",
   "_rev": "13-083669e6e5146c422052b2c2a74aa6fa",
   "language": "javascript",
   "views": {
       "achat": {
           "map": "function(doc) {\n  if ( doc.category == 'achat' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return Math.round(sum(values)/values.length);\n}"
       },
       "all": {
           "map": "function(doc) {\n  emit(doc.date, doc.expense);\n}",
           "reduce": "function(keys, values) {\n    return Math.round(sum(values)/values.length);\n}"
       },
       "gain": {
           "map": "function(doc) {\n  if ( doc.category == 'gain' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return Math.round(sum(values)/values.length);\n}"
       },
       "necessaire": {
           "map": "function(doc) {\n  if ( doc.category == 'necessaire' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return Math.round(sum(values)/values.length);\n}"
       },
       "sortie": {
           "map": "function(doc) {\n  if ( doc.category == 'sortie' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return Math.round(sum(values)/values.length);\n}"
       },
       "vacances": {
           "map": "function(doc) {\n  if ( doc.category == 'vacances' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return Math.round(sum(values)/values.length);\n}"
       },
       "autre": {
           "map": "function(doc) {\n  if ( doc.category == 'autre' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return Math.round(sum(values)/values.length);\n}"
       }
   }
}

{
   "_id": "_design/sum",
   "_rev": "7-ce0cec64f1bfb27ef2afe01cd1e4cfd1",
   "language": "javascript",
   "views": {
       "achat": {
           "map": "function(doc) {\n  if ( doc.category == 'achat' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return sum(values);\n}"
       },
       "all": {
           "map": "function(doc) {\n  emit(doc.date, doc.expense);\n}",
           "reduce": "function(keys, values) {\n    return sum(values);\n}"
       },
       "gain": {
           "map": "function(doc) {\n  if ( doc.category == 'gain' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return sum(values);\n}"
       },
       "necessaire": {
           "map": "function(doc) {\n  if ( doc.category == 'necessaire' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return sum(values);\n}"
       },
       "sortie": {
           "map": "function(doc) {\n  if ( doc.category == 'sortie' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return sum(values);\n}"
       },
       "vacances": {
           "map": "function(doc) {\n  if ( doc.category == 'vacances' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return sum(values);\n}"
       },
       "autre": {
           "map": "function(doc) {\n  if ( doc.category == 'autre' ) {\n    emit(doc.date, doc.expense);\n  }\n}",
           "reduce": "function(keys, values) {\n    return sum(values);\n}"
       }
   }
}

=== b. configuration de l'application banquelette
Il existe deux fichiers de configuration

Le premier : account/setting.py definit les parametres génériques 
Le deuxieme : account/data.py permet d'automatiser la modification de certains descriptifs ou de definir à quel categorie appartient la depense
 

